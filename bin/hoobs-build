#!/bin/bash

MODE=""
DEBUG="false"
BUILD="true"
MODULES="true"
NO_CACHE="false"
DOCKER="false"
TAG="dev"
ARCH="linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6"

usage()
{
    echo ""
    echo "help: hoobs-build [command] [-d | --debug] [--no-build] [--ignore-modules] [-t | --tag name]"
    echo "    Display information about builtin commands."
    echo ""
    echo "    Installs HOOBS with prerequisites, including Node, NPM and Avachi."
    echo "    This script allows you to adjust the version of Node, using the"
    echo "    -n (or --node) flag. It also allows you to adjust the version of"
    echo "    NPM using -m (or --npm) flag."
    echo ""
    echo "    Commands:"
    echo "        start                            starts either a node instance"
    echo "        interface                        builds the vue interface"
    echo "        image                            builds the npm package"
    echo "        publish                          publishes either the npm package or docker image"
    echo "        docker image                     builds the docker image"
    echo "        docker start                     starts the docker container"
    echo "        docker stop                      stops the docker container"
    echo "        docker create                    creates the docker container"
    echo "        docker remove                    removes the docker container"
    echo ""
    echo "    Options:"
    echo "        -d, --debug                      start HOOBS in debug mode"
    echo "        -t, --tag [name]                 set tag name for docker"
    echo "        -n, --node [version]             the desired Node version"
    echo "        --no-build                       start HOOBS without building"
    echo "        --ignore-modules                 start HOOBS without copying node_modules"
    echo "        --no-cache                       build docker image without the cache"
    echo "        -p, --platform [architecture]    build docker image without the cache"
    echo "        -h, --help                       displays this help menu"
    echo ""
    echo "    Returns:"
    echo "        Returns success unless the install fails."
    echo ""
}

while [ "$1" != "" ]; do
    case $1 in
        interface )         MODE="build"
                            ;;

        image )             MODE="pack"
                            ;;

        publish )           MODE="publish"
                            ;;

        start )             MODE="start"
                            ;;

        stop )              MODE="stop"
                            ;;

        create )            MODE="create"
                            ;;

        remove )            MODE="remove"
                            ;;

        docker )            DOCKER="true"
                            ;;

        -t | --tag)         shift
                            TAG=$1
                            ;;

        -p | --platform)    shift
                            ARCH=$1
                            ;;

        -d | --debug )      DEBUG="true"
                            ;;

        --no-build )        BUILD="false"
                            ;;

        --no-cache )        NO_CACHE="true"
                            ;;

        --ignore-modules )  MODULES="false"
                            ;;

        -h | --help )       usage
                            exit
                            ;;

        * )                 usage
                            exit
    esac

    shift
done

cd "$(dirname "$0")"
cd ../

case $MODE in
    "build")    if [[ "$DOCKER" = "true" ]]; then
                    usage
                    exit
                else
                    vue-cli-service build --modern
                fi

                ;;

    "pack")     if [[ "$DOCKER" = "true" ]]; then
                    if [[ "$BUILD" = "true" ]]; then
                        npm pack
                        rm -f ./builds/hoobs-core.tgz
                        mv ./hoobs-hoobs-*.tgz ./builds/hoobs-core.tgz
                        chmod 755 ./builds/hoobs-core.tgz
                    fi

                    START_ARGUMENTS="--platform $ARCH -t hoobs/hoobs:$TAG"

                    if [[ "$NO_CACHE" = "false" ]]; then
                        START_ARGUMENTS="$START_ARGUMENTS --no-cache"
                    fi

                    docker buildx build $START_ARGUMENTS .
                else
                    npm pack
                    rm -f ./builds/hoobs-core.tgz
                    mv ./hoobs-hoobs-*.tgz ./builds/hoobs-core.tgz
                    chmod 755 ./builds/hoobs-core.tgz
                fi

                ;;

    "publish")  if [[ "$DOCKER" = "true" ]]; then
                    docker login

                    if [[ "$BUILD" = "true" ]]; then
                        npm pack
                        rm -f ./builds/hoobs-core.tgz
                        mv ./hoobs-hoobs-*.tgz ./builds/hoobs-core.tgz
                        chmod 755 ./builds/hoobs-core.tgz
                    fi

                    CONFIRM=""

                    echo "This will publish to Docker Hub with this tag \"$TAG\"."
                    read -p "Type \"yes\" to continue: " CONFIRM

                    if [[ "$CONFIRM" = "yes" ]]; then
                        docker buildx build --no-cache --platform $ARCH -t hoobs/hoobs:$TAG --push .
                    fi
                else
                    CONFIRM=""

                    echo "This will publish to NPM."
                    read -p "Type \"yes\" to continue: " CONFIRM

                    if [[ "$CONFIRM" = "yes" ]]; then
                        npm publish --access public
                    fi
                fi

                ;;

    "create")   if [[ "$DOCKER" = "true" ]]; then
                    docker container run --publish 8080:8080 --detach --name hoobs hoobs/hoobs:$TAG
                else
                    usage
                    exit
                fi

                ;;

    "remove")   if [[ "$DOCKER" = "true" ]]; then
                    docker container rm --force hoobs
                else
                    usage
                    exit
                fi

                ;;

    "start")    if [[ "$DOCKER" = "true" ]]; then
                    docker container start hoobs
                else
                    if [[ "$BUILD" = "true" ]]; then
                        npm pack
                        rm -f ./builds/hoobs-core.tgz
                        mv ./hoobs-hoobs-*.tgz ./builds/hoobs-core.tgz
                        chmod 755 ./builds/hoobs-core.tgz
                    fi

                    START_ARGUMENTS=""

                    if [[ "$MODULES" = "false" ]]; then
                        if [[ "$START_ARGUMENTS" != "" ]]; then
                            START_ARGUMENTS="$START_ARGUMENTS "
                        fi

                        START_ARGUMENTS="$START_ARGUMENTS--ignore-modules"
                    fi

                    if [[ "$DEBUG" = "true" ]]; then
                        if [[ "$START_ARGUMENTS" != "" ]]; then
                            START_ARGUMENTS="$START_ARGUMENTS "
                        fi

                        START_ARGUMENTS="$START_ARGUMENTS--debug"
                    fi

                    ./bin/hoobs $START_ARGUMENTS
                fi

                ;;

    "stop")     if [[ "$DOCKER" = "true" ]]; then
                    docker container stop hoobs
                else
                    usage
                    exit
                fi

                ;;

    * )         usage
                exit
esac
