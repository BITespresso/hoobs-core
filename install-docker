#!/bin/bash

OS=""
ARCH=""
PACKAGE_MNGR=""
WORKDIR="/usr/src/hoobs"
ADDRESS=""

get_os()
{
    OS=$(uname)
    ARCH=$(uname -m)
}

get_ip()
{
    IP=$(hostname -I)

    for ip in $IP;
    do
        if [[ $ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            ADDRESS="http://$ip:8080"
        else
            ADDRESS="http://[$ip]:8080"
        fi
    done
}

wait_for_interface()
{
    until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
    do
        printf '.'
        sleep 5
    done
}

get_package_manager()
{
    if command -v yum > /dev/null; then
        PACKAGE_MNGR="yum"
    elif command -v dnf > /dev/null; then
        PACKAGE_MNGR="dnf"
    elif command -v apt-get > /dev/null; then
        PACKAGE_MNGR="apt"
    fi
}

install_docker()
{
    apt-get update
    apt-get -y install docker-compose

    curl -fssl https://get.docker.com -o get-docker.sh
    chmod u+x get-docker.sh
    ./get-docker.sh

    usermod -aG docker $USER
    rm -rf get-docker.sh
}

install_docker_compose()
{
    apt-get -y install curl docker-compose
}

get_os
get_package_manager

echo ""
echo "Thank You for choosing HOOBS"
echo "---------------------------------------------------------"

if [[ "$OS" != "Linux" ]]; then
    echo "Can Not Install Docker"
    echo "------------------------------------------------------------"
    echo "Please go to https://www.docker.com/get-started to install  "
    echo "Docker.                                                     "
    echo "------------------------------------------------------------"

    exit
fi

if [[ "$PACKAGE_MNGR" != "apt" ]]; then
    echo "Can Not Install Docker"
    echo "------------------------------------------------------------"
    echo "Please go to https://www.docker.com/get-started to install  "
    echo "Docker.                                                     "
    echo "------------------------------------------------------------"

    exit
fi

mkdir -p $WORKDIR
cd $WORKDIR

install_docker
install_docker_compose

PGID=$(id -g)
PUID=$(id -u)

cat > $WORKDIR/docker-compose.yml << EOL
version: '2'
services:
hoobs:
    image: hoobs/hoobs:latest
    restart: always
    network_mode: host
    volumes:
    - ./hoobs:/hoobs
    environment:
    - PGID=$PGID
    - PUID=$PUID
EOL

docker-compose pull
docker-compose up -d

wait_for_interface
get_ip

echo
